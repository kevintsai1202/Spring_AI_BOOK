services:
  # Spring AI 向量記憶應用
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-ai-vector-memory
    ports:
      - "8080:8080"
    environment:
      # Spring 配置
      - SPRING_PROFILES_ACTIVE=prod

      # OpenAI 配置
      - OPENAI_API_KEY=${OPENAI_API_KEY}

      # Neo4j 連接配置
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
      - NEO4J_DATABASE=neo4j

      # Java 選項
      - JAVA_OPTS=-Xmx2g -Xms1g
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - ai-network
    restart: unless-stopped

  # Neo4j 向量資料庫
  neo4j:
    image: neo4j:5.15
    container_name: neo4j-vector
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      # 認證配置
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-password}

      # 插件配置
      - NEO4J_PLUGINS=["apoc"]

      # 記憶體配置
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G

      # 安全配置
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "${NEO4J_PASSWORD:-password}", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - ai-network
    restart: unless-stopped

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local

networks:
  ai-network:
    driver: bridge
